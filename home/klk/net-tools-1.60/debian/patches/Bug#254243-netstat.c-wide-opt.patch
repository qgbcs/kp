This patch adds the --wide option to netstat, to avoid truncation of ipv6
addresses, by Luar Roji. (Bug #254243)

Already in upstream's CVS (rev 1.60)

Index: net-tools-1.60/man/en_US/netstat.8
===================================================================
--- net-tools-1.60.orig/man/en_US/netstat.8	2012-08-22 00:13:59.263268971 -0700
+++ net-tools-1.60/man/en_US/netstat.8	2012-08-22 00:14:02.587312761 -0700
@@ -8,7 +8,7 @@
 .\" Modified: Tuan Hoang tqhoang@bigfoot.com 
 .\"
 .\"
-.TH NETSTAT 8 "2008\-10\-03" "net\-tools" "Linux System Administrator's Manual"
+.TH NETSTAT 8 "2008-11-16" "net\-tools" "Linux Programmer's Manual"
 
 .SH NAME
 netstat \- Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships
@@ -118,6 +118,9 @@
 .SS "\-\-verbose , \-v"
 Tell the user what is going on by being verbose. Especially print some
 useful information about unconfigured address families.
+.SS "\-\-wide , \-W"
+Do not truncate IP addresses by using output as wide as needed. This is
+optional for now to not break existing scripts.
 .SS "\-\-numeric , \-n"
 Show numerical addresses instead of trying to determine symbolic host, port
 or user names.
Index: net-tools-1.60/netstat.c
===================================================================
--- net-tools-1.60.orig/netstat.c	2012-08-22 00:14:00.495285202 -0700
+++ net-tools-1.60/netstat.c	2012-08-22 00:14:02.611313078 -0700
@@ -149,6 +149,7 @@
 int flag_igmp= 0;
 int flag_rom = 0;
 int flag_exp = 1;
+int flag_wide= 0;
 int flag_prg = 0;
 int flag_arg = 0;
 int flag_ver = 0;
@@ -782,16 +783,20 @@
 		 get_sname(htons(local_port), "tcp",
 			   flag_not & FLAG_NUM_PORT));
 
-	if ((strlen(local_addr) + strlen(buffer)) > 22)
-	    local_addr[22 - strlen(buffer)] = '\0';
+	if (!flag_wide) {
+	    if ((strlen(local_addr) + strlen(buffer)) > 22)
+		local_addr[22 - strlen(buffer)] = '\0';
+	}
 
 	strcat(local_addr, ":");
 	strcat(local_addr, buffer);
 	snprintf(buffer, sizeof(buffer), "%s",
 		 get_sname(htons(rem_port), "tcp", flag_not & FLAG_NUM_PORT));
 
-	if ((strlen(rem_addr) + strlen(buffer)) > 22)
-	    rem_addr[22 - strlen(buffer)] = '\0';
+	if (!flag_wide) {
+	    if ((strlen(rem_addr) + strlen(buffer)) > 22)
+		rem_addr[22 - strlen(buffer)] = '\0';
+	}
 
 	strcat(rem_addr, ":");
 	strcat(rem_addr, buffer);
@@ -838,7 +843,7 @@
 
 static void udp_do_one(int lnr, const char *line)
 {
-    char buffer[8192], local_addr[64], rem_addr[64];
+    char buffer[8192], local_addr[128], rem_addr[128];
     char *udp_state, timers[64], more[512];
     int num, local_port, rem_port, d, state, timer_run, uid, timeout;
     char *protname;
@@ -935,8 +940,10 @@
 	snprintf(buffer, sizeof(buffer), "%s",
 		 get_sname(htons(local_port), "udp",
 			   flag_not & FLAG_NUM_PORT));
-	if ((strlen(local_addr) + strlen(buffer)) > 22)
-	    local_addr[22 - strlen(buffer)] = '\0';
+	if (!flag_wide) {
+	    if ((strlen(local_addr) + strlen(buffer)) > 22)
+	        local_addr[22 - strlen(buffer)] = '\0';
+	}
 	strcat(local_addr, ":");
 	strcat(local_addr, buffer);
 
@@ -944,8 +951,10 @@
 		 get_sname(htons(rem_port), "udp", flag_not & FLAG_NUM_PORT));
         safe_strncpy(rem_addr, ap->sprint((struct sockaddr *) &remaddr, 
 					  flag_not), sizeof(rem_addr));
-	if ((strlen(rem_addr) + strlen(buffer)) > 22)
-	    rem_addr[22 - strlen(buffer)] = '\0';
+	if (!flag_wide) {
+	    if ((strlen(rem_addr) + strlen(buffer)) > 22)
+	        rem_addr[22 - strlen(buffer)] = '\0';
+	}
 	strcat(rem_addr, ":");
 	strcat(rem_addr, buffer);
 
@@ -1511,9 +1520,9 @@
 
 static void usage(void)
 {
-    fprintf(stderr, _("usage: netstat [-veenNcCF] [<Af>] -r         netstat {-V|--version|-h|--help}\n"));
-    fprintf(stderr, _("       netstat [-vnNcaeol] [<Socket> ...]\n"));
-    fprintf(stderr, _("       netstat { [-veenNac] -i | [-cnNe] -M | -s }\n\n"));
+    fprintf(stderr, _("usage: netstat [-vWeenNcCF] [<Af>] -r         netstat {-V|--version|-h|--help}\n"));
+    fprintf(stderr, _("       netstat [-vWnNcaeol] [<Socket> ...]\n"));
+    fprintf(stderr, _("       netstat { [-vWeenNac] -i | [-cWnNe] -M | -s }\n\n"));
 
     fprintf(stderr, _("        -r, --route              display routing table\n"));
     fprintf(stderr, _("        -i, --interfaces         display interface table\n"));
@@ -1523,6 +1532,7 @@
     fprintf(stderr, _("        -M, --masquerade         display masqueraded connections\n\n"));
 #endif
     fprintf(stderr, _("        -v, --verbose            be verbose\n"));
+    fprintf(stderr, _("        -W, --wide               don't truncate IP addresses\n"));
     fprintf(stderr, _("        -n, --numeric            don't resolve names\n"));
     fprintf(stderr, _("        --numeric-hosts          don't resolve host names\n"));
     fprintf(stderr, _("        --numeric-ports          don't resolve port names\n"));
@@ -1572,6 +1582,7 @@
 	{"programs", 0, 0, 'p'},
 	{"verbose", 0, 0, 'v'},
 	{"statistics", 0, 0, 's'},
+	{"wide", 0, 0, 'W'},
 	{"numeric", 0, 0, 'n'},
 	{"numeric-hosts", 0, 0, '!'},
 	{"numeric-ports", 0, 0, '@'},
@@ -1591,7 +1602,7 @@
     getroute_init();		/* Set up AF routing support */
 
     afname[0] = '\0';
-    while ((i = getopt_long(argc, argv, "MCFA:acdegphinNorstuVv?wxl64", longopts, &lop)) != EOF)
+    while ((i = getopt_long(argc, argv, "MCFA:acdegphinNorstuWVv?wxl64", longopts, &lop)) != EOF)
 	switch (i) {
 	case -1:
 	    break;
@@ -1635,6 +1646,9 @@
 	case 'i':
 	    flag_int++;
 	    break;
+	case 'W':
+	    flag_wide++;
+	    break;
 	case 'n':
 	    flag_not |= FLAG_NUM;
 	    break;
Index: net-tools-1.60/lib/inet6.c
===================================================================
--- net-tools-1.60.orig/lib/inet6.c	2012-08-22 00:13:56.023226281 -0700
+++ net-tools-1.60/lib/inet6.c	2012-08-22 00:15:52.296754329 -0700
@@ -157,6 +157,8 @@
     sin6 = (struct sockaddr_in6 *) sap;
     sin6->sin6_family = AF_INET6;
     sin6->sin6_port = 0;
+    sin6->sin6_scope_id = 0;
+    sin6->sin6_flowinfo = 0;
 
     if (inet_pton(AF_INET6, bufp, sin6->sin6_addr.s6_addr) <= 0)
 	return (-1);
